
sig_load_imm ; vr_setup.nop = load32.always(0x601a00) ; nop = load32.always() ;
sig_none ; rx2.nop = or.ws.always.nop(a, a, vpm_read, nop) ; nop = nop.never(r0, r0) ; 
sig_none ; rx3.nop = or.always.nop(a, a, vpm_read, nop) ; nop = nop.never(r0, r0) ; 
sig_none ; nop.nop = nop.never.nop(r0, r0, uni, rb2) ; r2 = fmul.always(a, b) ; 
sig_none ; nop.nop = nop.never.nop(r0, r0, ra3, uni) ; r1 = fmul.always(b, a) ; 
sig_none ; rx5.nop = fadd.always.nop(r2, r1, uni, rb2) ; r3 = fmul.always(a, b) ; 
sig_none ; nop.nop = nop.never.nop(r0, r0, ra3, uni) ; r2 = fmul.always(b, a) ; 
sig_none ; rx3.nop = fadd.ws.always.nop(r3, r2, uni, rb2) ; r0 = fmul.always(a, b) ; 
sig_none ; nop.nop = nop.never.nop(r0, r0, ra3, uni) ; r3 = fmul.always(b, a) ; 
sig_none ; rx4.nop = fadd.ws.always.nop(r0, r3, uni, rb2) ; r1 = fmul.always(a, b) ; 
sig_none ; nop.nop = nop.never.nop(r0, r0, ra3, uni) ; r0 = fmul.always(b, a) ; 
sig_none ; rx4.nop = fadd.always.nop(r1, r0, vpm_read, nop) ; rx1 = v8min.always(a, a) ; 
sig_load_imm ; vw_setup = load32.ws.always(0x1a00) ; nop = load32.always() ;
sig_none ; nop.nop = nop.never.nop(r0, r0, uni, rb1) ; r0 = fmul.always(a, b) ; 
sig_none ; r3.nop = fadd.always.nop(a, r0, ra5, nop) ; nop = nop.never(r0, r0) ; 
sig_none ; r0.nop = fadd.ws.always.nop(r3, b, vpm_read, uni) ; rx1 = v8min.always(a, a) ; 
sig_none ; sfu_recip.nop = or.ws.always.nop(r0, r0, uni, rb1) ; r3 = fmul.always(a, b) ; 
sig_none ; nop.nop = nop.never.nop(r0, r0, uni, rb1) ; r2 = fmul.always(a, b) ; 
sig_none ; r1.nop = fadd.always.nop(b, r3, nop, rb4) ; nop = nop.never(r0, r0) ; 
sig_none ; rx2.nop = fadd.always.nop(b, r2, nop, rb3) ; r2 = fmul.always(r0, r4) ; 
sig_none ; nop.nop = nop.never.nop(r0, r0, uni, rb1) ; r3 = fmul.always(a, b) ; 
sig_none ; rx5.nop = fadd.ws.always.nop(a, r3, ra4, nop) ; nop = nop.never(r0, r0) ; 
sig_small_imm ; r3.nop = fsub.always.nop(b, r2, nop, 0x40000000) ; nop = nop.never(r0, r0) ; 
sig_none ; r0.nop = fadd.ws.always.nop(a, b, ra2, uni) ; rx6 = fmul.always(r4, r3) ; 
sig_none ; nop.nop = nop.never.nop(r0, r0, uni, nop) ; r2 = fmul.always(r0, a) ; 
sig_none ; r1.nop = fadd.always.nop(r1, b, ra6, uni) ; r3 = fmul.always(r2, a) ; 
sig_none ; rx0.16a = ftoi.always.nop(r3, r3, uni, nop) ; r0 = fmul.always(r1, a) ; 
sig_none ; nop.nop = nop.never.nop(r0, r0, ra6, nop) ; r1 = fmul.always(r0, a) ; 
sig_none ; rx0.16b = ftoi.always.nop(r1, r1, nop, nop) ; nop = nop.never(r0, r0) ; 
sig_none ; r1.nop = fadd.always.nop(b, a, uni, rb5) ; nop = nop.never(r0, r0) ; 
sig_none ; vpm.nop = or.always.nop(a, a, ra0, uni) ; r0 = fmul.always(r1, b) ; 
sig_none ; nop.nop = nop.never.nop(r0, r0, ra6, nop) ; r1 = fmul.always(r0, a) ; 
sig_none ; vpm.nop = fadd.always.nop(r1, b, vpm_read, uni) ; r0 = v8min.always(a, a) ; 
sig_none ; vpm.nop = or.always.nop(a, a, ra6, nop) ; nop = nop.never(r0, r0) ; 
sig_none ; vpm.nop = itof.always.8a(a, a, ra1, nop) ; nop = nop.never(r0, r0) ; 
sig_none ; vpm.nop = itof.always.8b(a, a, ra1, nop) ; nop = nop.never(r0, r0) ; 
sig_none ; vpm.nop = itof.always.8c(a, a, ra1, nop) ; nop = nop.never(r0, r0) ; 
sig_none ; vpm.nop = itof.always.8d(a, a, ra1, nop) ; nop = nop.never(r0, r0) ; 
sig_none ; vpm.nop = or.always.nop(r0, r0, vpm_read, nop) ; r1 = v8min.always(a, a) ; 
sig_none ; vpm.nop = or.always.nop(r1, r1, nop, nop) ; nop = nop.never(r0, r0) ; 
sig_end ; nop.nop = nop.never.nop(r0, r0, nop, nop) ; nop = nop.never(r0, r0) ; 
sig_none ; nop.nop = nop.never.nop(r0, r0, nop, nop) ; nop = nop.never(r0, r0) ; 
sig_none ; nop.nop = nop.never.nop(r0, r0, nop, nop) ; nop = nop.never(r0, r0) ; 